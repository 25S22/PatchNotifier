# Qualys Patch Management System - Standard Operating Procedure

## 1. OVERVIEW

### 1.1 Purpose
This document provides comprehensive instructions for operating the Qualys-based patch management system that automates vulnerability detection, asset inventory, and patch status reporting for enterprise software applications.

### 1.2 System Components
- **Qualys Asset Management API**: For querying installed software across enterprise assets
- **NIST NVD Integration**: For monitoring high/critical CVEs 
- **Application JSON Database**: Contains inventory of critical enterprise software
- **Automated Email Notifications**: Via Microsoft Outlook integration
- **Excel Report Generation**: Detailed patch status reports

### 1.3 Key Features
- Multi-version range support for complex software like Apache Tomcat
- Automated CVE monitoring and alerting
- Comprehensive asset inventory with patch status
- Email notifications with summary statistics
- Excel report generation with categorized results

## 2. SYSTEM ARCHITECTURE

### 2.1 Workflow Overview
1. **Authentication**: Login to Qualys API using corporate credentials
2. **Software Search**: Query assets for specific software installations
3. **Version Analysis**: Compare installed versions against target patch levels
4. **Report Generation**: Create Excel reports with categorized results
5. **Email Notification**: Send automated alerts with summary statistics
6. **Session Cleanup**: Logout from Qualys API

### 2.2 CVE Monitoring Process
- System monitors NIST NVD for high/critical CVEs
- Application JSON database contains list of monitored software
- When new CVEs are detected, system automatically triggers Qualys searches
- Results are compiled and distributed to security teams

## 3. CONFIGURATION REQUIREMENTS

### 3.1 API Endpoints
- **Base URL**: `https://qualysapi.qg1.apps.qualys.in`
- **Session Management**: `/api/2.0/fo/session/`
- **Asset Search**: `/qps/rest/2.0/search/am/hostasset`

### 3.2 Required Credentials
- **Username**: Qualys API username with appropriate permissions
- **Password**: Corresponding API password
- **SSL Certificate**: Corporate certificate for API authentication (`/path/to/your/corporate_cert.pem`)

### 3.3 System Dependencies
```python
# Required Python packages
requests
xml.etree.ElementTree
pandas
packaging
logging
win32com.client  # For Outlook integration
```

## 4. INSTALLATION & SETUP

### 4.1 Configuration Updates
Before running the system, update the following parameters in the script:

```python
# === CONFIGURATION SECTION ===
USERNAME        = "your_qualys_username"          # Replace with actual username
PASSWORD        = "your_qualys_password"          # Replace with actual password  
CERT_PATH       = "/path/to/your/corporate_cert.pem"  # Update certificate path
BASE_URL        = "https://qualysapi.qg1.apps.qualys.in"  # Verify correct region
PAGE_SIZE       = 100                             # Adjust based on performance needs
FILTER_OPERATOR = "CONTAINS"                      # Search operator
LOG_LEVEL       = logging.INFO                    # Logging verbosity
```

### 4.2 Certificate Setup
1. Obtain corporate SSL certificate from IT Security team
2. Place certificate in secure location accessible by the script
3. Update `CERT_PATH` variable with absolute path to certificate
4. Ensure certificate has proper read permissions

## 5. OPERATION PROCEDURES

### 5.1 Single Version Search
For software with single target version:
```
Input: "Apache HTTP Server"
Target Version: "2.4.54"
Result: All devices with versions below 2.4.54 marked as "Below target"
```

### 5.2 Multi-Version Range Search
For software with multiple active branches (e.g., Apache Tomcat):

**Input Example:**
```
Software: Apache Tomcat
Versions: 9.0.106/10.1.42/11.0.8
```

**Processing Logic:**
- **Range 1**: 9.0.0 - 9.0.106 (Major.Minor: 9.0)
- **Range 2**: 10.1.0 - 10.1.42 (Major.Minor: 10.1)  
- **Range 3**: 11.0.0 - 11.0.8 (Major.Minor: 11.0)

**⚠️ WARNING**: This approach will exclude intermediate ranges (e.g., 10.0.0-10.1.0). These older versions should be searched separately and patched with higher priority due to increased security risk.

### 5.3 Execution Steps

1. **Launch Script**
   ```bash
   python qualys_patch_scanner.py
   ```

2. **Provide Input**
   - Enter software name when prompted
   - Enter target version(s) separated by '/' for multi-version searches

3. **Monitor Progress**
   - Script will display login status
   - Page-by-page processing updates
   - Host processing progress (every 100 hosts)

4. **Review Results**
   - Excel file generated with naming convention: `{software_name}_versions_{versions}.xlsx`
   - Email draft automatically created in Outlook
   - Summary statistics displayed in console

## 6. OUTPUT INTERPRETATION

### 6.1 Excel Report Structure
| Column | Description |
|--------|-------------|
| Host ID | Qualys unique identifier for the asset |
| DNS | DNS hostname of the asset |
| NetBIOS | NetBIOS name of the asset |
| Software | Actual software name found on asset |
| Version | Installed version number |
| Status | Below target / Up-to-date / Not Found |
| Range | Applicable version range for multi-version searches |

### 6.2 Status Categories
- **Below target**: Requires patching - security risk
- **Up-to-date**: Meets minimum version requirements
- **Not Found**: Software not detected on asset (may be uninstalled)

### 6.3 Email Notification Contents
- **Subject**: `[PATCH ALERT] {Software} – Versions ≤ {Target_Versions}`
- **Summary Statistics**: Total devices, below target count, up-to-date count, not found count
- **CVE Details**: When triggered by CVE monitoring (if applicable)
- **Action Items**: Clear instructions for remediation teams

## 7. TROUBLESHOOTING

### 7.1 Common Issues

**Authentication Failures**
- Verify username/password credentials
- Check SSL certificate path and permissions
- Confirm API access permissions in Qualys console

**Empty Results**
- Verify software name spelling and capitalization
- Check if assets exist in Qualys inventory
- Confirm software is actually installed on targeted assets

**Performance Issues**
- Reduce `PAGE_SIZE` if timeouts occur
- Increase logging level for detailed debugging
- Check network connectivity to Qualys API

### 7.2 Error Codes
- **403 Forbidden**: Insufficient API permissions or invalid credentials
- **XML Parse Error**: Malformed response from Qualys API
- **Login Failed**: Authentication unsuccessful

## 8. SECURITY CONSIDERATIONS

### 8.1 Credential Management
- Store credentials securely (consider environment variables)
- Implement credential rotation procedures
- Use service accounts with minimal required permissions

### 8.2 Certificate Management
- Regularly update SSL certificates before expiration
- Monitor certificate validity
- Maintain secure storage of certificate files

### 8.3 Data Handling
- Excel reports contain sensitive asset information
- Implement proper data classification and handling
- Secure transmission of reports to stakeholders

## 9. MAINTENANCE & UPDATES

### 9.1 Regular Tasks
- **Monthly**: Review and update monitored software list in JSON database
- **Quarterly**: Audit API credentials and permissions
- **Annually**: Update SSL certificates and review security configurations

### 9.2 System Updates
- Monitor for Qualys API changes and updates
- Update Python dependencies regularly
- Test system functionality after any configuration changes

## 10. INTEGRATION WITH CVE MONITORING

### 10.1 NIST NVD Integration
The system actively monitors NIST National Vulnerability Database for:
- High severity CVEs (CVSS ≥ 7.0)
- Critical severity CVEs (CVSS ≥ 9.0)
- CVEs affecting software in the application JSON database

### 10.2 Automated Response
When high/critical CVEs are detected:
1. System automatically triggers Qualys asset searches
2. Affected devices are identified and categorized
3. Email alerts are generated with CVE details
4. Remediation teams are notified with priority levels

### 10.3 Application JSON Database
Maintains inventory of critical enterprise software including:
- Software names and variants
- Version tracking requirements
- Business criticality ratings
- Responsible teams and contacts

## 11. COMPLIANCE & REPORTING

### 11.1 Audit Requirements
- All searches are logged with timestamps
- Email notifications provide audit trail
- Excel reports serve as compliance documentation

### 11.2 Metrics Tracking
- Patch deployment timelines
- Asset coverage percentages
- CVE response times
- System availability metrics

## 12. CONTACTS & SUPPORT

### 12.1 Technical Support
- **IT Security Team**: For credential and certificate issues
- **Qualys Administrator**: For API permissions and configuration
- **System Administrator**: For script deployment and maintenance

### 12.2 Escalation Procedures
- **High/Critical CVEs**: Immediate notification to security leadership
- **System Failures**: Alert infrastructure team within 4 hours
- **Compliance Issues**: Notify risk management team

---

**Document Control:**
- Version: 1.0
- Last Updated: [Current Date]
- Next Review: [Annual Review Date]
- Approved By: IT Security Manager

**Disclaimer:** This SOP should be reviewed and approved by organizational security and compliance teams before implementation.
